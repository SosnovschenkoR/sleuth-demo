version: '3.0'
services:
  datadog-agent:
    image: datadog/agent:latest
    container_name: datadog-agent
    environment:
      TZ: Europe/Moscow
      DD_API_KEY: "dummy_key"
      DD_APM_ENABLED: "true"
      DD_APM_NON_LOCAL_TRAFFIC: "true"
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: "true"
      DD_LOGS_ENABLED: "true"
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
      DD_CONTAINER_EXCLUDE: "name:datadog-agent"
    ports:
      - "8126:8126"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro

  app-scheduler:
    image: app-scheduler:latest
    container_name: app-scheduler
    depends_on:
      - datadog-agent
    ports:
      - "8080:8080"
    environment:
      TZ: Europe/Moscow
      DD_API_KEY: "dummy_key"
      DD_AGENT_HOST: datadog-agent
      DD_LOGS_INJECTION: "true"
      DD_TRACE_SAMPLE_RATE: 1
      DD_VERSION: "1.0.1"
      DD_ENV: "dev"
      DD_SERVICE: "app-scheduler"
    labels:
      #com.datadoghq.ad.check_names: '[""]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host":"%%host%%", "port": "%%port%%"}]'
      com.datadoghq.ad.logs: '[{"source": "go", "service": "go"}]'
      com.datadoghq.tags.env: "dev"
      com.datadoghq.tags.service: "apollo-scheduler"
      com.datadoghq.tags.version: "1.0.1"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/hello" ]
      interval: 60s
      timeout: 10s
      retries: 3